- name: install apt db packages (*.deb file)
  when: >
    (
    percona_server_version != "" or
    percona_xtradb_cluster_version != "" or
    mysql_version != '' or
    mysql_router_version != '' or
    orchestrator_version != '' or
    proxysql_version != '' or
    kerberos_server != '' or
    percona_proxysql_version != '' or
    mysql_ndb_data_version != '' or
    pgpool_version != ''
    ) and
    (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu')
  apt:
    deb: "{{item}}"
  with_items: >-
    {{
      os[dist][soft].install_packages +
      ( [] if debug_packages == '' else
        os[dist][soft].install_packages + os[dist][soft].install_debug_packages) +
      ( [] if not ('development' in db_features.split(',') and 'development_packages' in os[dist][soft]) else os[dist][soft].development_packages) +
      ( [] if not ( mysql_ndb_data_version != '' ) else os[dist][soft].data_packages ) +
      ( [] if not ( rocksdb_enabled|bool and 'rocksdb_packages' in os[dist][soft] ) else
        os[dist][soft].rocksdb_packages)
    }}

- name: install apt db packages (pkg name)
  when: >
    (
    ldap_server != '' or
    postgresql_version != '' or mysql_version != ''
    ) and
    (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu')
  apt:
    name: >-
      {{
        os[dist][soft].install_packages +
        ( [] if debug_packages == '' else
          os[dist][soft].install_packages + os[dist][soft].install_debug_packages) +
        ( [] if not ('development' in db_features.split(',') and 'development_packages' in os[dist][soft]) else os[dist][soft].development_packages) +
        ( [] if not ( rocksdb_enabled|bool and 'rocksdb_packages' in os[dist][soft] ) else
          os[dist][soft].rocksdb_packages)
      }}

- name: install db packages
  when: >
    (
    percona_server_version != "" or
    percona_xtradb_cluster_version != "" or
    mysql_version != '' or
    mysql_router_version != '' or
    mysql_ndb_data_version != '' or
    mysql_ndb_sql_version != '' or
    mysql_ndb_management_version != '' or
    percona_orchestrator_version != '' or
    orchestrator_version != '' or
    proxysql_version != '' or
    ldap_server != '' or
    kerberos_server != '' or
    percona_proxysql_version != '' or
    postgresql_version != '' or
    pgpool_version != ''
    ) and
    (ansible_distribution == 'CentOS' or ansible_distribution == 'Rocky' or ansible_distribution == 'Red Hat Enterprise Linux' or ansible_distribution == 'OracleLinux')
  yum:
    name: "{{ os[dist][soft].install_packages + ( [] if debug_packages == '' else os[dist][soft].install_debug_packages) + ( [] if replication_type != 'group' or soft == 'proxysql' else os[dist][soft].mysql_shell_packages) + ( [] if not ('development' in db_features.split(',') and 'development_packages' in os[dist][soft]) else os[dist][soft].development_packages) + ( [] if not ( mysql_ndb_data_version != '' ) else os[dist][soft].data_packages ) + ( [] if not ( mysql_ndb_sql_version != '' ) else os[dist][soft].sql_packages ) + ( [] if not ( mysql_ndb_management_version != '' ) else os[dist][soft].management_packages ) + ( [] if not ( tests_enabled|bool and 'tests_packages' in os[dist][soft] ) else os[dist][soft].tests_packages) + ( [] if not ( tests_enabled|bool and 'tests_packages' in os[dist][soft] ) else os[dist][soft].tests_packages) + ( [] if not ( rocksdb_enabled|bool and 'rocksdb_packages' in os[dist][soft] ) else os[dist][soft].rocksdb_packages)  }}"
    state: present
    disable_gpg_check: 'yes'
  #register: result
  #retries: 10
  #until: result.rc == 0
  #delay: 5

