- name: Setup Samba Active Directory server
  when: samba_ad != '' and (ansible_distribution == 'CentOS' or ansible_distribution == 'Rocky' or ansible_distribution == 'Red Hat Enterprise Linux' or ansible_distribution == 'OracleLinux')
  shell:
    cmd: /bin/bash /vagrant/tools/setup_samba_ad.sh
    creates: /root/samba.configured

- name: Setup LDAP server
  when: ldap_server != '' and (ansible_distribution == 'CentOS' or ansible_distribution == 'Rocky' or ansible_distribution == 'Red Hat Enterprise Linux' or ansible_distribution == 'OracleLinux')
  command:
    cmd: /bin/bash /vagrant/tools/setup_ldap_server.sh "{{db_user}}" "{{db_password}}" "ssl"
    creates: /root/ldaprootpasswd.ldif

- name: Setup LDAP server (deb)
  when: ldap_server != '' and (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu')
  command:
    cmd: /bin/bash /vagrant/tools/setup_ldap_server_ubuntu.sh "{{db_user}}" "{{db_password}}" "ssl"
    creates: /root/ldaprootpasswd.ldif

- name: Setup LDAP on client
  when: ldap_server_ip != '' and (ansible_distribution == 'CentOS' or ansible_distribution == 'Rocky' or ansible_distribution == 'Red Hat Enterprise Linux' or ansible_distribution == 'OracleLinux')
  command:
    cmd: /bin/bash /vagrant/tools/setup_ldap_client.sh "{{ldap_server_ip}}"
    creates: /root/ldap-client.configured

- name: Setup LDAP on client (Debian)
  when: ldap_server_ip != '' and (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu')
  command:
    cmd: /bin/bash /vagrant/tools/setup_ldap_client_ubuntu.sh "{{ldap_server_ip}}" ldapadm "{{db_password}}"
    creates: /root/ldap-client.configured

- name: Setup Kerberos server
  when: kerberos_server != ''
  command:
    cmd: /bin/bash /vagrant/tools/setup_kerberos_server.sh "{{db_user}}" "{{db_password}}"
    creates: /root/kerberos.configured

- name: Setup Kerberos client
  when: kerberos_client != ''
  command:
    cmd: /bin/bash /vagrant/tools/setup_kerberos_client.sh "{{db_user}}" "{{db_password}}" "{{ 'yes' if samba_kerberos != '' else 'no' }}"
    creates: /root/kerberos-client.configured

- name: start Python KMIP server
  when: kmip_server != ''
  systemd:
    name: pykmip-server.service
    state: started