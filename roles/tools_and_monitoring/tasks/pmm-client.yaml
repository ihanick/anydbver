- name: include role vars
  include_vars:
    file: "{{playbook_dir}}/roles/tools_and_monitoring/vars/main.yml"

- name: install apt db packages (pkg name)
  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu')
  apt:
    deb: "{{item}}"
  with_items: "{{os[dist].pmm_client.install_packages }}"

- name: install PMM client rpm packages
  when: (ansible_distribution == 'CentOS' or ansible_distribution == 'Rocky' or ansible_distribution == 'Red Hat Enterprise Linux' or ansible_distribution == 'OracleLinux')
  yum:
    name: "{{pmm_client_packages }}"
    state: present
    disable_gpg_check: yes

- name: Setup pmm-admin PMM2
  when: (pmm_client_version.startswith('2.') or pmm_client_version == '2' ) and pmm_url != ''
  register: pmm_admin_config
  changed_when: "'already exists' not in pmm_admin_config.stdout"
  shell:
    cmd: >-
      until curl -k "{{pmm_url|replace(':secret@', ':'+(db_password|urlencode)+'@')}}"/graph/ |grep -q grafana.dark ; do sleep 1 ; done;
      /usr/bin/pmm-admin config
      --server-insecure-tls
      --server-url="{{pmm_url|replace(':secret@', ':'+(db_password|urlencode)+'@')}}" || true
- name: Setup pmm-admin PMM1
  when: pmm_client_version.startswith('1.') and pmm_url != ''
  register: pmm_admin_config
  changed_when: "'already exists' not in pmm_admin_config.stdout"
  shell:
    cmd: >-
      pmm-admin config
      --server-insecure-ssl
      --server=$(echo "{{pmm_url}}"|awk -F '[/:@]' '{print $6}'):$(echo "{{pmm_url}}"|awk -F '[/:@]' '{print $7}')
      --server-user=$(echo "{{pmm_url}}"|awk -F '[/:@]' '{print $4}')
      --server-password=$(echo "{{pmm_url}}"|awk -F '[/:@]' '{print $5}') || true


