---
# tasks file for mariadb
- name: "Package info sql"
  ansible.builtin.debug:
    msg: "{{ package_info_sql }}"
- name: "Package info"
  ansible.builtin.debug:
    msg: "{{ package_info }}"

- name: Setup yum repository
  when: ansible_distribution == 'CentOS' or ansible_distribution == 'Rocky' or ansible_distribution == 'Red Hat Enterprise Linux' or ansible_distribution == 'OracleLinux'
  copy:
    content: |
      [mariadb]
      name = MariaDB
      baseurl = http://yum.mariadb.org/{{ package_info['version'] | regex_replace('^([0-9]+)\.([0-9]+)\..*$', '\1.\2') }}/{{ 'centos' if dist == 'el7' else 'rhel' }}{{ ansible_distribution_version  | regex_replace('^([0-9]+)\..*$', '\1') }}-amd64
      gpgkey=https://yum.mariadb.org/RPM-GPG-KEY-MariaDB
      gpgcheck=1
      module_hotfixes=1
    dest: /etc/yum.repos.d/MariaDB.repo

- name: Enable EPEL
  when: dist == 'el7'
  package:
    name: epel-release
    state: present

- name: install MariaDB packages
  when: ansible_distribution == 'CentOS' or ansible_distribution == 'Rocky' or ansible_distribution == 'Red Hat Enterprise Linux' or ansible_distribution == 'OracleLinux'
  yum:
    state: present
    disable_gpg_check: yes
    name: "{{ item }}"
  with_items: " {{ package_info['packages'].split('|') }}"

- name: Install gpg for apt-key
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
  package: name=gnupg2 state=present

- name: Install perl
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
  package: name=perl state=present

- name: Add MariaDB Apt key
  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu') and mariadb_version != ''
  ansible.builtin.apt_key:
    url: https://mariadb.org/mariadb_release_signing_key.asc
    state: present

- name: Add MariaDB Apt repo
  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu') and mariadb_version != ''
  lineinfile:
    create: yes
    path: /etc/apt/sources.list.d/mariadb.list
    line: "deb [arch=amd64,arm64,ppc64el] https://mirrors.ukfast.co.uk/sites/mariadb/repo/10.5/ubuntu focal main"

- name: refresh apt repo
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
  apt:
    update_cache: yes

- name: install apt db packages (deb)
  when: mariadb_version != '' and (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu')
  apt:
    deb: "{{item}}"
    force: yes
  with_items: >-
    {{
      os[dist][soft].install_packages +
      ( [] if debug_packages == '' else
        os[dist][soft].install_packages + os[dist][soft].install_debug_packages) +
      ( [] if not ('development' in db_features.split(',') and 'development_packages' in os[dist][soft]) else os[dist][soft].development_packages) +
      ( [] if not ( rocksdb_enabled|bool and 'rocksdb_packages' in os[dist][soft] ) else
        os[dist][soft].rocksdb_packages)
    }}

# PMM
- name: Install Percona yum Repository
  when: (ansible_distribution == 'CentOS' or ansible_distribution == 'Rocky' or ansible_distribution == 'Red Hat Enterprise Linux' or ansible_distribution == 'OracleLinux') and pmm_client_version != ""
  block:
    - name: install percona yum repo
      yum:
        name: https://repo.percona.com/yum/percona-release-latest.noarch.rpm
        state: present

- name: install PMM client
  when: pmm_client_version != ""
  package:
    name: "{{item}}"
    state: present
  with_items: "{{os[dist].pmm_client.install_packages }}"
- name: Setup pmm-admin
  when: pmm_client_version != '' and pmm_url != ''
  register: pmm_admin_config
  changed_when: "'already exists' not in pmm_admin_config.stdout"
  shell:
    cmd: '/usr/bin/pmm-admin config --server-insecure-tls --server-url="{{pmm_url}}" || true'

- name: MariaDB Setup tasks
  when: install_only == ''
  include_tasks: setup.yaml
